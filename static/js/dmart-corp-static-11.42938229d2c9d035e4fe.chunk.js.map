{"version":3,"sources":["components/Tile/style.ts","components/Tile/index.tsx"],"names":["Styles","theme","createStyles","root","position","title","display","fontSize","rem","fontWeight","textAlign","alignItems","padding","spacing","breakpoints","down","card","paddingBottom","cardInfo","icon","width","height","marginRight","info","marginTop","marginBottom","alignNormal","fontWeightNormal","marginLeft","smallFont","mediumFont","Tile","this","props","classes","item","content","titleAsContent","className","clsx","src","alt","React","withStyles","Style","name"],"mappings":"mQAoDeA,EA7CA,SAACC,GAAD,OACdC,YAAa,CACZC,KAAM,CACLC,SAAU,YAEXC,MAAM,aACLC,QAAS,OACTC,SAAUC,YAAI,IACdC,WAAY,IACZC,UAAW,OACXC,WAAY,SACZC,QAASX,EAAMY,QAAQ,IACtBZ,EAAMa,YAAYC,KAAK,MAAQ,IAEjCC,KAAK,eACHf,EAAMa,YAAYC,KAAK,MAAQ,CAC/BE,cAAehB,EAAMY,QAAQ,OAG/BK,SAAS,eACPjB,EAAMa,YAAYC,KAAK,MAAQ,CAC/BH,QAASX,EAAMY,QAAQ,EAAG,KAG5BM,KAAK,aACJC,MAAOnB,EAAMY,QAAQ,GACrBQ,OAAQpB,EAAMY,QAAQ,IACrBZ,EAAMa,YAAYC,KAAK,MAAQ,CAC/BO,YAAarB,EAAMY,QAAQ,KAG7BU,KAAM,CACLC,UAAWvB,EAAMY,QAAQ,IACzBY,aAAcxB,EAAMY,QAAQ,GAC5BJ,WAAY,KAEbiB,YAAa,CACZf,WAAY,UAEbgB,iBAAkB,CAAElB,WAAY,KAChCmB,WAAY,CAAEA,WAAY3B,EAAMY,QAAQ,IACxCgB,UAAW,CAAEtB,SAAUC,YAAI,KAC3BsB,WAAY,CAAEvB,SAAUC,YAAI,QCnCxBuB,E,uKACL,c,oBAMA,WAAiB,IAAD,MACWC,KAAKC,MAAvBC,EADO,EACPA,QAASC,EADF,EACEA,KACT9B,EAA+B8B,EAA/B9B,MAAO+B,EAAwBD,EAAxBC,QAASb,EAAeY,EAAfZ,KAAMJ,EAASgB,EAAThB,KAC1BkB,GAAiB,EAIrB,MAHc,KAAVhC,GAA4B,KAAZ+B,IACnBC,GAAiB,GAGjB,uBAAKC,UAAWC,YAAKL,EAAQ/B,OAC5B,uBACCmC,UAAWC,aAAI,mBAEZL,EAAQR,YAAcW,GAFV,cAGZH,EAAQP,iBAAmBU,GAHf,GAKdH,EAAQ7B,QAGT,uBAAKiC,UAAWC,YAAKL,EAAQf,OAC5B,uBAAKqB,IAAKrB,EAAMsB,IAAI,OAAOH,UAAWC,YAAKL,EAAQf,SAEpD,uBACCmB,UAAWC,YAAKL,EAAQN,YAAT,mBACbM,EAAQJ,YAAcO,GADT,cAEbH,EAAQL,UAAYQ,GAFP,KAKdA,EAAiBD,EAAU/B,IAGjB,KAAZ+B,EAAiB,KACjB,uBAAKE,UAAWJ,EAAQhB,UACvB,uBAAKoB,UAAWJ,EAAQL,WAAYQ,EAAiB,GAAKD,GAC1D,uBAAKE,UAAWC,YAAKL,EAAQL,UAAWK,EAAQX,OAAQA,S,GAxC3CmB,iBA+CJC,sBAAWC,EAAO,CAAEC,KAAM,sBAA1BF,CAAkDZ","file":"static/js/dmart-corp-static-11.42938229d2c9d035e4fe.chunk.js","sourcesContent":["import { Theme, createStyles } from '@material-ui/core/styles';\nimport { rem } from '../../utils/functions';\n/**\n *\n * @param {Theme} theme Material Theam.\n * @returns {Theme} Return Material theams.\n */\nconst Styles = (theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: 'relative'\n\t\t},\n\t\ttitle: {\n\t\t\tdisplay: 'flex',\n\t\t\tfontSize: rem(18),\n\t\t\tfontWeight: 500,\n\t\t\ttextAlign: 'left',\n\t\t\talignItems: 'center',\n\t\t\tpadding: theme.spacing(1),\n\t\t\t[theme.breakpoints.down('sm')]: {}\n\t\t},\n\t\tcard: {\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tpaddingBottom: theme.spacing(2.5)\n\t\t\t}\n\t\t},\n\t\tcardInfo: {\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tpadding: theme.spacing(0, 1)\n\t\t\t}\n\t\t},\n\t\ticon: {\n\t\t\twidth: theme.spacing(4),\n\t\t\theight: theme.spacing(4),\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tmarginRight: theme.spacing(1)\n\t\t\t}\n\t\t},\n\t\tinfo: {\n\t\t\tmarginTop: theme.spacing(0.5),\n\t\t\tmarginBottom: theme.spacing(2),\n\t\t\tfontWeight: 600\n\t\t},\n\t\talignNormal: {\n\t\t\talignItems: 'normal'\n\t\t},\n\t\tfontWeightNormal: { fontWeight: 400 },\n\t\tmarginLeft: { marginLeft: theme.spacing(1) },\n\t\tsmallFont: { fontSize: rem(16) },\n\t\tmediumFont: { fontSize: rem(18) }\n\t});\n\nexport default Styles;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { withStyles, WithStyles } from '@material-ui/core';\nimport Style from './style';\n\ninterface Props extends WithStyles<typeof Style> {\n\t[name: string]: any;\n\titem: any;\n}\n/**\n * Tile for founders section.\n * @param {any} props - Properties\n * @returns {React.Component} component.\n */\nclass Tile extends React.PureComponent<Props> {\n\tcomponentDidMount() {}\n\n\t/**\n\t * Render method\n\t * @returns {JSX.Element} Jsx.\n\t */\n\tpublic render() {\n\t\tconst { classes, item } = this.props;\n\t\tconst { title, content, info, icon } = item;\n\t\tlet titleAsContent = false;\n\t\tif (title === '' && content !== '') {\n\t\t\ttitleAsContent = true;\n\t\t}\n\t\treturn (\n\t\t\t<div className={clsx(classes.root)}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[classes.alignNormal]: titleAsContent,\n\t\t\t\t\t\t\t[classes.fontWeightNormal]: titleAsContent\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclasses.title\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<div className={clsx(classes.icon)}>\n\t\t\t\t\t\t<img src={icon} alt=\"icon\" className={clsx(classes.icon)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={clsx(classes.marginLeft, {\n\t\t\t\t\t\t\t[classes.mediumFont]: !titleAsContent,\n\t\t\t\t\t\t\t[classes.smallFont]: titleAsContent\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t{titleAsContent ? content : title}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{content === '' ? null : (\n\t\t\t\t\t<div className={classes.cardInfo}>\n\t\t\t\t\t\t<div className={classes.smallFont}>{titleAsContent ? '' : content}</div>\n\t\t\t\t\t\t<div className={clsx(classes.smallFont, classes.info)}>{info}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default withStyles(Style, { name: 'DmartCorpFreshTile' })(Tile);\n"],"sourceRoot":""}