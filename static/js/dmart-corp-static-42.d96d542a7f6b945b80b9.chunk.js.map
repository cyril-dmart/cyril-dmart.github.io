{"version":3,"sources":["pages/InvestorRelationsCategory/style.ts","pages/InvestorRelationsCategory/index.tsx","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["Styles","theme","createStyles","root","block","padding","spacing","margin","breakpoints","down","content","position","color","overflow","section","textAlign","letterSpacing","rem","marginTop","paddingLeftRight","paddingLeft","paddingRight","link","textDecoration","activeLink","fontSize","outlined","fontWeight","field","width","button","height","fontFamily","border","borderRadius","backgroundColor","marginTop_8","marginTop_16","marginTop_40","fontSize_18","fontSize_22","smallFont","mediumFont","largeFont","marginRight","largerFont","superLargeFont","lineHeight","separator","linkBody","display","breadcrumb","BreadcrumbSeparator","Loadable","InvestorRelationsCategory","this","props","selections","getInvestorRelationsContent","changeSection","match","location","selectedCategoryAction","get","search","url","URLSearchParams","menu","category","classes","fileLinks","process","REACT_APP_API_URL","REACT_APP_CONTENT_BASE_URL","REACT_APP_FILE_API","CONTENT_FILE_API","heading","className","Resources","InvestorRelationsTitle","Breadcrumbs","aria-label","Link","component","RouterLink","to","Grid","container","item","xs","sm","clsx","map","file","key","fileId","href","fileName","target","replace","React","mapDispatchToProps","GetInvestorRelationsContentAction","action","ChangeSectionAction","SelectedCategoryAction","withStyles","Style","name","withRouter","connect","state","investorRelations","createSvgIcon","d","marginLeft","palette","grey","cursor","boxShadow","shadows","emphasize","icon","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","index","li","concat","Typography","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle","userSelect"],"mappings":"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","file":"static/js/dmart-corp-static-42.d96d542a7f6b945b80b9.chunk.js","sourcesContent":["import { Theme, createStyles } from '@material-ui/core/styles';\nimport { rem } from '../../utils/functions';\n/**\n *\n * @param {Theme} theme Material Theme.\n * @returns {Theme} Return Material Themes.\n */\nconst Styles = (theme: Theme) =>\n\tcreateStyles({\n\t\troot: {},\n\t\tblock: {\n\t\t\tpadding: theme.spacing(0, 2),\n\t\t\tmargin: theme.spacing(2, 0),\n\t\t\t[theme.breakpoints.down('sm')]: {}\n\t\t},\n\t\tcontent: {\n\t\t\tposition: 'relative',\n\t\t\tcolor: '#555758',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\toverflow: 'scroll'\n\t\t\t}\n\t\t},\n\t\tsection: {\n\t\t\ttextAlign: 'justify',\n\t\t\tcolor: '#555758',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tletterSpacing: rem(0.3),\n\t\t\t\tmarginTop: theme.spacing(2)\n\t\t\t}\n\t\t},\n\t\tpadding: {\n\t\t\t'& > div': {\n\t\t\t\tpadding: 16\n\t\t\t}\n\t\t},\n\t\tpaddingLeftRight: {\n\t\t\tpaddingLeft: theme.spacing(1),\n\t\t\tpaddingRight: theme.spacing(1)\n\t\t},\n\t\tlink: {\n\t\t\ttextDecoration: 'underline',\n\t\t\tcolor: '#0091FF'\n\t\t},\n\t\tactiveLink: {\n\t\t\tcolor: '#0091FF',\n\t\t\ttextDecoration: 'underline',\n\t\t\tfontSize: rem(14)\n\t\t},\n\t\toutlined: { fontSize: 16, fontWeight: 500 },\n\t\tfield: {\n\t\t\tmargin: theme.spacing(1, 0),\n\t\t\twidth: '100%'\n\t\t},\n\t\tbutton: {\n\t\t\twidth: '100%',\n\t\t\theight: theme.spacing(6),\n\t\t\tfontSize: rem(16),\n\t\t\tfontWeight: 600,\n\t\t\tcolor: '#555758',\n\t\t\tfontFamily: `'Nunito', sans-serif`,\n\t\t\tborder: `1px solid #979797`,\n\t\t\tborderRadius: theme.spacing(0.5),\n\t\t\tbackgroundColor: '#0091FF10'\n\t\t},\n\t\tmarginTop_8: {\n\t\t\tmarginTop: theme.spacing(0)\n\t\t},\n\t\tmarginTop_16: {\n\t\t\tmarginTop: theme.spacing(2)\n\t\t},\n\t\tmarginTop_40: {\n\t\t\tmarginTop: theme.spacing(5)\n\t\t},\n\t\tfontSize_18: {\n\t\t\tfontSize: rem(18)\n\t\t},\n\t\tfontSize_22: {\n\t\t\tfontSize: rem(22)\n\t\t},\n\t\tsmallFont: {\n\t\t\tfontSize: rem(14)\n\t\t},\n\t\tmediumFont: {\n\t\t\tfontSize: rem(20)\n\t\t},\n\t\tlargeFont: {\n\t\t\tfontSize: rem(24),\n\t\t\tmarginRight: theme.spacing(1)\n\t\t},\n\t\tlargerFont: {\n\t\t\tfontSize: rem(28),\n\t\t\ttextDecoration: 'underline'\n\t\t},\n\t\tsuperLargeFont: {\n\t\t\tfontSize: rem(60)\n\t\t},\n\t\tlineHeight: {\n\t\t\tlineHeight: 1\n\t\t},\n\t\tseparator: {\n\t\t\tmargin: 0\n\t\t},\n\t\tlinkBody: {\n\t\t\tdisplay: 'flex',\n\t\t\tmargin: theme.spacing(0.25, 0)\n\t\t},\n\t\tbreadcrumb: {\n\t\t\tmargin: theme.spacing(2, 0)\n\t\t}\n\t});\n\nexport default Styles;\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { withStyles, WithStyles } from '@material-ui/core';\nimport scrollIntoView from 'scroll-into-view';\nimport Loadable from '@loadable/component';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport get from 'lodash/get';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport { RootState } from '../../reducers';\nimport {\n\tChangeSectionAction,\n\tGetInvestorRelationsContentAction,\n\tSelections,\n\tSelectedCategoryAction,\n\tFileLink\n} from '../../redux/Investors/types';\nimport Style from './style';\nimport { Resources } from '../../constants/resources';\n\nconst BreadcrumbSeparator = Loadable(() => import('../../components/BreadcrumbSeparator'));\n\ninterface Props extends WithStyles<typeof Style>, RouteComponentProps {\n\tselections: Selections;\n\tgetInvestorRelationsContent: typeof GetInvestorRelationsContentAction.action;\n\tchangeSection: typeof ChangeSectionAction.action;\n\tselectedCategoryAction: typeof SelectedCategoryAction.action;\n}\n/**\n * InvestorRelationsCategory page.\n * @param {any} props - Properties\n * @returns {React.Component} component.\n */\nclass InvestorRelationsCategory extends React.PureComponent<Props> {\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tselections,\n\t\t\tgetInvestorRelationsContent,\n\t\t\tmatch,\n\t\t\tchangeSection,\n\t\t\tselectedCategoryAction,\n\t\t\tlocation\n\t\t} = this.props;\n\t\tconst selectedSection = get(selections, 'section', '');\n\t\tif (selectedSection === '') {\n\t\t\tgetInvestorRelationsContent();\n\t\t}\n\t\tconst { search } = location;\n\t\tconst url = new URLSearchParams(search);\n\t\tconst section = url.get('section') || '';\n\t\tconst menu = url.get('menu') || '';\n\t\tconst category = url.get('category') || '';\n\t\tchangeSection({ section, menu, category });\n\t\t// scrollIntoView(document.getElementById('home') as any);\n\t}\n\n\tcomponentDidUpdate() {}\n\n\t/**\n\t * Render method\n\t * @returns {JSX.Element} Jsx.\n\t */\n\tpublic render() {\n\t\tconst { classes, selections, match, location } = this.props;\n\t\tconst fileLinks: Array<FileLink> = get(selections, 'fileLinks', []);\n\t\t// const { params } = match;\n\t\t// const page = get(params, 'page', '');\n\t\t// const menu = get(params, 'menu', '');\n\t\t// const category = get(params, 'category', '');\n\t\tconst { search } = location;\n\t\tconst url = new URLSearchParams(search);\n\t\tconst section = url.get('section') || '';\n\t\tconst menu = url.get('menu') || '';\n\t\tconst category = url.get('category') || '';\n\t\tconst {\n\t\t\tREACT_APP_API_URL = '',\n\t\t\tREACT_APP_CONTENT_BASE_URL = '',\n\t\t\tREACT_APP_FILE_API = ''\n\t\t} = process.env;\n\t\tconst CONTENT_FILE_API =\n\t\t\tREACT_APP_API_URL + REACT_APP_CONTENT_BASE_URL + REACT_APP_FILE_API;\n\t\tconst heading = category;\n\t\treturn (\n\t\t\t<div className={classes.content}>\n\t\t\t\t<div className={classes.block}>\n\t\t\t\t\t<div className={classes.largerFont}>{Resources.InvestorRelationsTitle}</div>\n\t\t\t\t\t<Breadcrumbs\n\t\t\t\t\t\tseparator={<BreadcrumbSeparator />}\n\t\t\t\t\t\taria-label=\"breadcrumb\"\n\t\t\t\t\t\tclasses={{ separator: classes.separator }}\n\t\t\t\t\t\tclassName={classes.breadcrumb}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={RouterLink as any}\n\t\t\t\t\t\t\tto=\"/investor-relationship\"\n\t\t\t\t\t\t\tclassName={classes.activeLink}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{section}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={RouterLink as any}\n\t\t\t\t\t\t\tto={`/investor-relationship?section=${section}&menu=${menu}`}\n\t\t\t\t\t\t\tclassName={classes.activeLink}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{menu}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<span className={classes.smallFont}>{category}</span>\n\t\t\t\t\t</Breadcrumbs>\n\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\tsm={12}\n\t\t\t\t\t\t\tclassName={clsx(classes.fontSize_18, classes.marginTop_8)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{heading}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{fileLinks.map((file) => (\n\t\t\t\t\t\t\t<Grid item xs={12} sm={12} key={file.fileId}>\n\t\t\t\t\t\t\t\t<div className={classes.linkBody}>\n\t\t\t\t\t\t\t\t\t<PictureAsPdfIcon className={classes.largeFont} />\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.link)}\n\t\t\t\t\t\t\t\t\t\thref={`${CONTENT_FILE_API}/${file.fileId}/${file.fileName}`}\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"__blank__\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{file.fileName.replace(/(\\.pdf)/gi, '')}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state: RootState) => ({\n\tselections: state.investorRelations.selections\n});\n\nconst mapDispatchToProps = {\n\tgetInvestorRelationsContent: GetInvestorRelationsContentAction.action,\n\tchangeSection: ChangeSectionAction.action,\n\tselectedCategoryAction: SelectedCategoryAction.action\n};\n\nexport default withStyles(Style, { name: 'DmartCorpFreshInvestorRelationsCategory' })(\n\twithRouter(connect(mapStateToProps, mapDispatchToProps)(InvestorRelationsCategory))\n);\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}