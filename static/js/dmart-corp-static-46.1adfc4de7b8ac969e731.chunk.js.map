{"version":3,"sources":["components/FeedbackForm/style.ts","components/FeedbackForm/index.tsx"],"names":["Styles","theme","createStyles","visibility","width","overflow","transition","left","zIndex","root","customerImage","breakpoints","down","tabLabel","display","tabFont","fontSize","rem","formControl","marginTop","spacing","marginBottom","minWidth","paragraph","paddingLeft","paddingRight","up","justifyContent","alignItems","margin","select","centerText","tabs","labelSize","outlined","fontWeight","field","padding","actionButton","height","letterSpacing","stickyButton","top","bottom","background","form","LoadingButton","Loadable","userTypeMap","0","1","2","3","LocationTypes","label","value","headOffice","headOfficeCity","locationCode","company","locationName","locationType","region","alias1","alias2","pincode","address","siteCity","siteState","FeedbackForm","props","reCaptcha","React","componentDidUpdate","prevProps","prevFeedback","feedbackForm","enqueueSnackbar","submitFeedback","ActionStatus","SUCCESS","getCaptchaToken","LOADING","variant","anchorOrigin","vertical","horizontal","FAILURE","message","get","errorData","response","isEmpty","status","getStoreList","type","siteId","updateForm","changeStateOrCityAction","CityStateDataByLocation","filter","storeList","dataObj","selectedSite","head","store","state","city","onLoadRecaptcha","current","reset","a","googleReCaptchaProps","executeRecaptcha","token","console","log","setState","captcha","handleSelect","event","newValue","includes","handleChange","name","target","getMasterData","process","REACT_APP_API_URL","REACT_APP_MDM_BASE_URL","payload","query","url","allStores","length","_handleSubmit","e","sendFeedbackData","formData","mode","kioskMode","storecode","userType","mobile","emailId","addressLine1","addressLine2","comments","location","userContact","address1","address2","_handleErrors","errors","this","setInterval","classes","stateList","cityList","cityStores","className","onSubmit","onError","noValidate","Grid","container","item","sm","md","xs","id","onChange","SelectProps","displayEmpty","InputProps","required","map","option","MenuItem","key","Autocomplete","fullWidth","disableClearable","autoHighlight","options","getOptionLabel","getOptionSelected","optionValue","noOptionsText","autoComplete","renderInput","params","placeholder","InputLabelProps","shrink","validators","errorMessages","helperText","rows","multiline","justify","loading","Button","color","disabled","size","mapDispatchToProps","SendFeedbackDataAction","action","GetStoreListAction","clearState","ClearStateAction","UpdateFormAction","ChangeStateOrCityAction","withStyles","Style","withRouter","connect","feedbackReducer","getStoreListState","submitFeedbackState","withSnackbar","withGoogleReCaptcha"],"mappings":"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","file":"static/js/dmart-corp-static-46.1adfc4de7b8ac969e731.chunk.js","sourcesContent":["import { Theme, createStyles } from '@material-ui/core/styles';\nimport { rem } from '../../utils/functions';\n\n/**\n *\n * @param {Theme} theme Material Theme.\n * @returns {Theme} Return Material Themes.\n */\nconst Styles = (theme: Theme) =>\n\tcreateStyles({\n\t\t'@global': {\n\t\t\t'.grecaptcha-badge': {\n\t\t\t\tvisibility: 'visible',\n\t\t\t\twidth: '70px !important',\n\t\t\t\toverflow: 'hidden !important',\n\t\t\t\ttransition: 'all 0.3s ease !important',\n\t\t\t\tleft: '0px !important',\n\t\t\t\tzIndex: 15\n\t\t\t},\n\n\t\t\t'.grecaptcha-badge:hover': {\n\t\t\t\twidth: '256px !important'\n\t\t\t}\n\t\t},\n\t\troot: {},\n\t\tcustomerImage: {\n\t\t\twidth: '127px',\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\twidth: '40px'\n\t\t\t}\n\t\t},\n\t\ttabLabel: {\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tdisplay: 'none'\n\t\t\t}\n\t\t},\n\t\ttabFont: {\n\t\t\tfontSize: rem(12),\n\t\t\t[theme.breakpoints.down('sm')]: {\n\t\t\t\tfontSize: rem(10)\n\t\t\t}\n\t\t},\n\n\t\tformControl: {\n\t\t\tmarginTop: theme.spacing(2),\n\t\t\tmarginBottom: theme.spacing(1),\n\t\t\twidth: '100%',\n\t\t\tminWidth: '100%'\n\t\t},\n\t\tparagraph: {\n\t\t\t'& > *': {\n\t\t\t\tpaddingLeft: 0,\n\t\t\t\tpaddingRight: 0\n\t\t\t},\n\t\t\t[theme.breakpoints.up('md')]: {\n\t\t\t\twidth: 500,\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems: 'center',\n\t\t\t\tmargin: 'auto'\n\t\t\t}\n\t\t},\n\t\tselect: {},\n\t\tcenterText: {\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center'\n\t\t},\n\t\ttabs: {\n\t\t\tjustifyContent: 'center'\n\t\t},\n\t\tlabelSize: {\n\t\t\tfontSize: 18\n\t\t},\n\t\toutlined: { fontSize: 16, fontWeight: 500 },\n\t\tfield: {\n\t\t\tmargin: theme.spacing(1, 0),\n\t\t\tmarginTop: theme.spacing(2),\n\t\t\twidth: '100%'\n\t\t},\n\t\tpadding: {},\n\t\tactionButton: {\n\t\t\tminWidth: 100,\n\t\t\theight: rem(36),\n\t\t\tletterSpacing: '1.25px',\n\t\t\tfontSize: rem(14)\n\t\t},\n\t\tstickyButton: {\n\t\t\t// position: 'sticky',\n\t\t\ttop: 'calc(100vh - 200px)',\n\t\t\tbottom: -8,\n\t\t\theight: 62,\n\t\t\tbackground: 'white',\n\t\t\tzIndex: 10,\n\t\t\talignItems: 'center',\n\t\t\tmargin: theme.spacing(2, 0)\n\t\t},\n\t\tform: {\n\t\t\theight: 'calc(100vh - 168px)'\n\t\t}\n\t});\n\nexport default Styles;\n","import * as React from 'react';\nimport {\n\twithStyles,\n\tWithStyles,\n\tBox,\n\tTextField,\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tMenuItem,\n\tButton,\n\tGrid\n} from '@material-ui/core';\nimport Loadable from '@loadable/component';\nimport { withSnackbar, WithSnackbarProps } from 'notistack';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { connect } from 'react-redux';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withGoogleReCaptcha } from 'react-google-recaptcha-v3';\nimport groupBy from 'lodash/groupBy';\nimport keysIn from 'lodash/keysIn';\nimport sortBy from 'lodash/sortBy';\nimport map from 'lodash/map';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\nimport head from 'lodash/head';\nimport { uniqBy, filter, orderBy } from 'lodash';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Style from './style';\nimport { RootState } from '../../store';\nimport {\n\tClearStateAction,\n\tGetStoreListAction,\n\tSendFeedbackDataAction,\n\tUpdateFormAction,\n\tFeedbackFormPayload,\n\tChangeStateOrCityAction,\n\tFeedbackFormState\n} from '../../redux/FeedbackForm/types';\n\nimport { ActionStatus } from '../../utils/functions';\n// import { Stores } from '../../constants/stores';\n\nconst Paragraph = Loadable(() => import('../Paragraph'));\nconst LoadingButton = Loadable(() => import('../LoadingButton'));\n\nexport const userTypeMap = {\n\t0: 'CUSTOMER',\n\t1: 'EMPLOYEE',\n\t2: 'VENDOR',\n\t3: 'OTHER'\n};\n\nexport const LocationTypes = [\n\t{ label: 'Store', value: 'Store' },\n\t{ label: 'Distribution Center', value: 'Distribution Center' },\n\t{ label: 'Regional Office', value: 'Regional Office' },\n\t{ label: 'Head Office', value: 'Head Office' }\n];\nexport const headOffice = ['Maharashtra'];\nexport const headOfficeCity = [\n\t{\n\t\tlocationCode: '',\n\t\tcompany: '',\n\t\tlocationName: '',\n\t\tlocationType: '',\n\t\tregion: '',\n\t\talias1: '',\n\t\talias2: '',\n\t\tpincode: '',\n\t\taddress: '',\n\t\tsiteCity: 'Thane',\n\t\tsiteState: 'Maharashtra'\n\t}\n];\n\ninterface State {\n\tcaptcha: string;\n}\nexport interface Props extends WithStyles<typeof Style>, RouteComponentProps, WithSnackbarProps {\n\tfeedbackForm: FeedbackFormState;\n\tsendFeedbackData: typeof SendFeedbackDataAction.action;\n\tgetStoreList: typeof GetStoreListAction.action;\n\tclearState: typeof ClearStateAction.action;\n\tgetStoreListState: ActionStatus;\n\ttype: any;\n\tsiteId: string;\n\tupdateForm: typeof UpdateFormAction.action;\n\tformData: FeedbackFormPayload;\n\tchangeStateOrCityAction: typeof ChangeStateOrCityAction.action;\n\tkioskMode: boolean;\n\tmode: string;\n}\nclass FeedbackForm extends React.Component<Props, State> {\n\treCaptcha = React.createRef<any>();\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcaptcha: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getMasterData();\n\t\tconst { updateForm, type } = this.props;\n\t\tupdateForm({ userType: userTypeMap[type] });\n\t\tthis.getCaptchaToken();\n\t\tsetInterval(this.getCaptchaToken, 120000);\n\t}\n\n\tcomponentDidUpdate = (prevProps: Props) => {\n\t\tconst prevFeedback = prevProps.feedbackForm;\n\t\tconst { feedbackForm, enqueueSnackbar } = this.props;\n\t\tif (prevFeedback.submitFeedback !== feedbackForm.submitFeedback) {\n\t\t\tif (feedbackForm.submitFeedback === ActionStatus.SUCCESS) {\n\t\t\t\tthis.getCaptchaToken();\n\t\t\t}\n\t\t\tif (feedbackForm.submitFeedback === ActionStatus.LOADING) {\n\t\t\t\tthis.getCaptchaToken();\n\t\t\t}\n\t\t}\n\t\tif (prevFeedback.submitFeedback !== feedbackForm.submitFeedback) {\n\t\t\tif (feedbackForm.submitFeedback === ActionStatus.SUCCESS) {\n\t\t\t\tenqueueSnackbar('Thank you for your feedback.', {\n\t\t\t\t\tvariant: 'success',\n\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\thorizontal: 'right'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (feedbackForm.submitFeedback === ActionStatus.FAILURE) {\n\t\t\t\tconst message = get(feedbackForm.errorData, 'response.message', '');\n\t\t\t\tlet response = isEmpty(message) ? feedbackForm.errorData.message : message;\n\t\t\t\tconst statusCode = feedbackForm.errorData.status;\n\t\t\t\tif (statusCode === 0) {\n\t\t\t\t\tresponse =\n\t\t\t\t\t\t'No internet available. Please check your connection and try again later.';\n\t\t\t\t}\n\t\t\t\tenqueueSnackbar(response, {\n\t\t\t\t\tvariant: 'error',\n\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\thorizontal: 'right'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tprevFeedback.getStoreList !== feedbackForm.getStoreList &&\n\t\t\tfeedbackForm.getStoreList === ActionStatus.SUCCESS\n\t\t) {\n\t\t\tconst { type, siteId, updateForm, changeStateOrCityAction } = this.props;\n\t\t\tif (siteId !== '') {\n\t\t\t\tconst CityStateDataByLocation = type\n\t\t\t\t\t? filter(feedbackForm.storeList, (dataObj: any) => {\n\t\t\t\t\t\t\treturn dataObj.locationType === type;\n\t\t\t\t\t  })\n\t\t\t\t\t: feedbackForm.storeList;\n\t\t\t\tconst selectedSite = head(\n\t\t\t\t\tfilter(CityStateDataByLocation, (store) => store.locationCode === siteId)\n\t\t\t\t);\n\t\t\t\tconst selectedState = get(selectedSite, 'siteState', '');\n\t\t\t\tchangeStateOrCityAction({ state: selectedState });\n\t\t\t\tchangeStateOrCityAction({ city: get(selectedSite, 'siteCity', '') });\n\t\t\t\tupdateForm({ store: get(selectedSite, 'locationName', '') });\n\t\t\t}\n\t\t}\n\t};\n\n\tonLoadRecaptcha = () => {\n\t\tif (this.reCaptcha.current) {\n\t\t\tthis.reCaptcha.current.reset();\n\t\t}\n\t};\n\n\tgetCaptchaToken = async () => {\n\t\ttry {\n\t\t\tconst { type } = this.props;\n\t\t\tconst googleReCaptchaProps = get(this.props, 'googleReCaptchaProps', {});\n\t\t\tif (googleReCaptchaProps.executeRecaptcha) {\n\t\t\t\tconst token = await googleReCaptchaProps.executeRecaptcha(`Form_${type}`);\n\t\t\t\tconsole.log('Recaptha', token);\n\t\t\t\tthis.setState({ captcha: token });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log('getCaptchaToken failed ', error);\n\t\t}\n\t};\n\n\thandleSelect = (event: any, newValue: any, field = '') => {\n\t\tconst { updateForm } = this.props;\n\t\tupdateForm({ [field]: newValue });\n\t\tif (['state', 'city'].includes(field)) {\n\t\t\tconst { changeStateOrCityAction } = this.props;\n\t\t\tchangeStateOrCityAction({ [field]: newValue });\n\t\t}\n\t};\n\n\thandleChange = (event: any) => {\n\t\tconst { updateForm } = this.props;\n\t\tconst name = get(event.target, 'name', '');\n\t\tconst value = get(event.target, 'value', '');\n\t\tupdateForm({ [name]: value });\n\t\tif (['locationType'].includes(name)) {\n\t\t\tconst { changeStateOrCityAction } = this.props;\n\t\t\tchangeStateOrCityAction({ [name]: value });\n\t\t}\n\t};\n\n\tgetMasterData = () => {\n\t\tconst { getStoreList, feedbackForm } = this.props;\n\t\tconst { REACT_APP_API_URL = '', REACT_APP_MDM_BASE_URL = '' } = process.env;\n\t\tconst payload = {\n\t\t\tquery: '',\n\t\t\turl: `${REACT_APP_API_URL + REACT_APP_MDM_BASE_URL}`\n\t\t};\n\t\tconst { allStores } = feedbackForm;\n\t\tif (allStores.length === 0) {\n\t\t\tgetStoreList(payload);\n\t\t}\n\t};\n\n\t_handleSubmit = (e: any) => {\n\t\tconst { sendFeedbackData, formData, mode, kioskMode } = this.props;\n\t\tconst { captcha } = this.state;\n\t\tconst {\n\t\t\tstate,\n\t\t\tcity,\n\t\t\tstore,\n\t\t\tlocationType,\n\t\t\tstorecode,\n\t\t\tuserType,\n\t\t\tmobile,\n\t\t\temailId,\n\t\t\taddressLine1,\n\t\t\taddressLine2,\n\t\t\tpincode,\n\t\t\tname,\n\t\t\tcomments\n\t\t} = formData;\n\t\tconst payload = {\n\t\t\tuserType,\n\t\t\tlocation: {\n\t\t\t\tstate,\n\t\t\t\tcity,\n\t\t\t\tstore,\n\t\t\t\tlocationType,\n\t\t\t\tstorecode: kioskMode ? get(store, 'locationCode', '') : storecode\n\t\t\t},\n\t\t\tuserContact: {\n\t\t\t\tmobile,\n\t\t\t\temailId,\n\t\t\t\taddress1: addressLine1,\n\t\t\t\taddress2: addressLine2,\n\t\t\t\tpincode,\n\t\t\t\tname\n\t\t\t},\n\t\t\tcaptcha,\n\t\t\tcomments,\n\t\t\tmode\n\t\t};\n\t\tsendFeedbackData(payload);\n\t};\n\n\tprivate _handleErrors = (errors) => {};\n\n\t/**\n\t * Render method\n\t * @returns {JSX.Element} Jsx.\n\t */\n\tpublic render() {\n\t\tconst { classes, type, feedbackForm, formData } = this.props;\n\t\tconst locationType = get(formData, 'locationType', '');\n\t\tconst userType = userTypeMap[type];\n\t\tconst state = get(formData, 'state', '');\n\t\tconst city = get(formData, 'city', '');\n\t\tconst store = get(formData, 'store', '');\n\t\tconst name = get(formData, 'name', '');\n\t\tconst mobile = get(formData, 'mobile', '');\n\t\tconst emailId = get(formData, 'emailId', '');\n\t\tconst addressLine1 = get(formData, 'addressLine1', '');\n\t\tconst addressLine2 = get(formData, 'addressLine2', '');\n\t\tconst pincode = get(formData, 'pincode', '');\n\t\tconst comments = get(formData, 'comments', '');\n\t\tconst cityError = false;\n\t\tconst stateList: any = get(feedbackForm, 'stateList', []);\n\t\tconst cityList: any = get(feedbackForm, 'cityList', []);\n\t\tconst cityStores: any = get(feedbackForm, 'cityStores', []);\n\t\treturn (\n\t\t\t<div className={classes.form}>\n\t\t\t\t<ValidatorForm\n\t\t\t\t\tonSubmit={(e) => this._handleSubmit(e)}\n\t\t\t\t\tonError={(errors) => this._handleErrors(errors)}\n\t\t\t\t\tnoValidate\n\t\t\t\t>\n\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t{type === 1 && (\n\t\t\t\t\t\t\t<Grid item sm={6} md={6} xs={12}>\n\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\tid=\"section\"\n\t\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t\tlabel=\"Location Type\"\n\t\t\t\t\t\t\t\t\tvalue={locationType}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tSelectProps={{\n\t\t\t\t\t\t\t\t\t\tdisplayEmpty: true\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={classes.field}\n\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\tclassName: classes.padding\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclasses={{ root: classes.outlined }}\n\t\t\t\t\t\t\t\t\tname=\"locationType\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{LocationTypes.map((option) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={option.label} value={option.value}>\n\t\t\t\t\t\t\t\t\t\t\t{option.label}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</TextValidator>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Grid item sm={6} md={6} xs={12}>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\tautoHighlight\n\t\t\t\t\t\t\t\toptions={\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t? // locationType === 'Head Office'\n\t\t\t\t\t\t\t\t\t\t  headOffice\n\t\t\t\t\t\t\t\t\t\t: stateList\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option}\n\t\t\t\t\t\t\t\tgetOptionSelected={(option, optionValue) => option === optionValue}\n\t\t\t\t\t\t\t\tnoOptionsText=\"No Options\"\n\t\t\t\t\t\t\t\tautoComplete={false}\n\t\t\t\t\t\t\t\tonChange={(event, newValue) =>\n\t\t\t\t\t\t\t\t\tthis.handleSelect(event, newValue, 'state')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tlabel=\"State\"\n\t\t\t\t\t\t\t\t\t\tname=\"state\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter State\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\t\t\t\t\tvalidators={['required']}\n\t\t\t\t\t\t\t\t\t\terrorMessages={['This field is required']}\n\t\t\t\t\t\t\t\t\t\thelperText={cityError ? 'Please select a state' : ''}\n\t\t\t\t\t\t\t\t\t\trequired={userType === 'CUSTOMER'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item sm={6} xs={12} md={6}>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\t\t\toptions={\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t? // locationType === 'Head Office'\n\t\t\t\t\t\t\t\t\t\t  headOfficeCity\n\t\t\t\t\t\t\t\t\t\t: cityList\n\t\t\t\t\t\t\t\t\t// : (cityList as DataObj[])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option}\n\t\t\t\t\t\t\t\tgetOptionSelected={(option, optionValue) => option === optionValue}\n\t\t\t\t\t\t\t\tonChange={(event: any, newValue: any) =>\n\t\t\t\t\t\t\t\t\tthis.handleSelect(event, newValue, 'city')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnoOptionsText=\"No Options\"\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\tname=\"city\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter City\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"City\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t\t\t\t\tclasses: { root: classes.labelSize }\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\t\t\t\t\tvalidators={['required']}\n\t\t\t\t\t\t\t\t\t\terrorMessages={['This select a city']}\n\t\t\t\t\t\t\t\t\t\thelperText={cityError ? 'Please select a city' : ''}\n\t\t\t\t\t\t\t\t\t\trequired={userType === 'CUSTOMER'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{locationType === 'Store' ||\n\t\t\t\t\t\t\t(userType === 'CUSTOMER' && (\n\t\t\t\t\t\t\t\t<Grid item sm={6} xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\t\t\tvalue={store}\n\t\t\t\t\t\t\t\t\t\toptions={cityStores}\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option}\n\t\t\t\t\t\t\t\t\t\tgetOptionSelected={(option, optionValue) =>\n\t\t\t\t\t\t\t\t\t\t\toption === optionValue\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChange={(event: any, newValue: any) =>\n\t\t\t\t\t\t\t\t\t\t\tthis.handleSelect(event, newValue, 'store')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tnoOptionsText=\"No Options\"\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"store\"\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select Store\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Store\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\tclasses: { root: classes.labelSize }\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\t\t\t\t\t\t\tvalidators={['required']}\n\t\t\t\t\t\t\t\t\t\t\t\terrorMessages={['Please select a store']}\n\t\t\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\t\t\tcityError ? 'Please select a store' : ''\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\trequired={userType === 'CUSTOMER'}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t<Grid item sm={6} xs={12} md={6}>\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalidators={[]}\n\t\t\t\t\t\t\t\terrorMessages={['Please enter your name']}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item sm={6} xs={12} md={6}>\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"mobile\"\n\t\t\t\t\t\t\t\tvalue={mobile}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\tlabel=\"Mobile\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Mobile No\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalidators={['required', 'matchRegexp:^[6-9]{1}[0-9]{9}$']}\n\t\t\t\t\t\t\t\terrorMessages={[\n\t\t\t\t\t\t\t\t\t'Please enter your mobile number',\n\t\t\t\t\t\t\t\t\t'Please enter a valid mobile number'\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item sm={6} xs={12} md={6}>\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"emailId\"\n\t\t\t\t\t\t\t\tvalue={emailId}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalidators={['required', 'isEmail']}\n\t\t\t\t\t\t\t\terrorMessages={[\n\t\t\t\t\t\t\t\t\t'Please enter Email Id',\n\t\t\t\t\t\t\t\t\t'Please enter a valid Email Id'\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item sm={6} xs={12} md={6}>\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"addressLine1\"\n\t\t\t\t\t\t\t\tvalue={addressLine1}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\tlabel=\"Address 1\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter your Address\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalidators={[]}\n\t\t\t\t\t\t\t\terrorMessages={[]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item sm={6} xs={12} md={6}>\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"addressLine2\"\n\t\t\t\t\t\t\t\tvalue={addressLine2}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tlabel=\"Address 2\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter your Area\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalidators={[]}\n\t\t\t\t\t\t\t\terrorMessages={[]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item sm={6} xs={12} md={6}>\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"pincode\"\n\t\t\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\tlabel=\"Pincode\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Pincode\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalidators={['matchRegexp:^[1-9]{1}[0-9]{2}s{0,1}[0-9]{3}$']}\n\t\t\t\t\t\t\t\terrorMessages={['Enter valid pincode']}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item sm={12} xs={12} md={6}>\n\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"comments\"\n\t\t\t\t\t\t\t\tvalue={comments}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\t\t\tlabel=\"Comments\"\n\t\t\t\t\t\t\t\tplaceholder=\"Comments\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\tvalidators={['required']}\n\t\t\t\t\t\t\t\terrorMessages={['Please provide the comments']}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tsm={12}\n\t\t\t\t\t\t\tmd={12}\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\tclassName={classes.stickyButton}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<LoadingButton loading={false}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={feedbackForm.submitFeedback === ActionStatus.LOADING}\n\t\t\t\t\t\t\t\t\tclassName={classes.actionButton}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSUBMIT\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</LoadingButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</ValidatorForm>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state: RootState) => ({\n\tfeedbackForm: state.feedbackReducer,\n\tsiteId: state.feedbackReducer.siteId,\n\tgetStoreListState: state.feedbackReducer.getStoreList,\n\tsubmitFeedbackState: state.feedbackReducer.submitFeedback,\n\tformData: state.feedbackReducer.formData,\n\tkioskMode: state.feedbackReducer.kioskMode,\n\tmode: state.feedbackReducer.mode\n});\n\nconst mapDispatchToProps = {\n\tsendFeedbackData: SendFeedbackDataAction.action,\n\tgetStoreList: GetStoreListAction.action,\n\tclearState: ClearStateAction.action,\n\tupdateForm: UpdateFormAction.action,\n\tchangeStateOrCityAction: ChangeStateOrCityAction.action\n};\n\nexport default withStyles(Style, { name: 'DmartFreshFeedback' })(\n\twithRouter(\n\t\tconnect(\n\t\t\tmapStateToProps,\n\t\t\tmapDispatchToProps\n\t\t)(withSnackbar(withGoogleReCaptcha(FeedbackForm)))\n\t)\n);\n"],"sourceRoot":""}